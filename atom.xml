<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Only Lucky</title>
  
  <subtitle>个人博客空间</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://onlyLucky.github.io/"/>
  <updated>2021-04-18T09:31:34.226Z</updated>
  <id>https://onlyLucky.github.io/</id>
  
  <author>
    <name>Feynman</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue中使用keep-alive</title>
    <link href="https://onlyLucky.github.io/2021/04/18/vue%E4%B8%AD%E4%BD%BF%E7%94%A8keep-alive/"/>
    <id>https://onlyLucky.github.io/2021/04/18/vue中使用keep-alive/</id>
    <published>2021-04-17T16:00:00.000Z</published>
    <updated>2021-04-18T09:31:34.226Z</updated>
    
    <content type="html"><![CDATA[<h2 id="keep-alive"><a class="markdownIt-Anchor" href="#keep-alive"></a> keep-alive</h2><p><img src="//onlyLucky.github.io/2021/04/18/vue中使用keep-alive/.%5Cvue%E4%B8%AD%E4%BD%BF%E7%94%A8keep-alive%5Cbg.jpg" alt></p><p><strong>keep-alive 是 Vue 的内置组件，当它包裹动态组件时，会缓存不活动的组件实例，而不是销毁它们</strong>。和 transition 相似，keep-alive 是一个抽象组件：它自身不会渲染成一个 DOM 元素，也不会出现在父组件链中。</p><h2 id="作用"><a class="markdownIt-Anchor" href="#作用"></a> 作用</h2><p>在组件切换过程中将状态保留在内存中，防止重复渲染DOM，减少加载时间及性能消耗，提高用户体验性 。</p><h2 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h2><p>在 <strong>created 生命周期函数调用时将需要缓存的 VNode 节点保存在 this.cache 中／在 render（页面渲染） 时</strong>，如果 VNode 的 name 符合缓存条件（<strong>可以用 include 以及 exclude 控制</strong>），则会从 this.cache 中取出之前缓存的 VNode 实例进行渲染。</p><p>VNode：虚拟DOM，其实就是一个JS对象</p><h2 id="props"><a class="markdownIt-Anchor" href="#props"></a> props</h2><ul><li><code>include</code> - 字符串或正则表达式。只有名称匹配的组件会被缓存。</li><li><code>exclude</code> - 字符串或正则表达式。任何名称匹配的组件都不会被缓存。</li><li><code>max</code> - 数字。最多可以缓存多少组件实例。</li></ul><p>【 vue 2.1.0 新增 】<code>include</code> 和 <code>exclude</code> prop 允许组件有条件地缓存。二者都可以用逗号分隔字符串、正则表达式或一个<strong>数组</strong>来表示：</p><p><strong>使用用法：</strong></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 逗号分隔字符串 --&gt;</span><br><span class="line">&lt;keep-alive include="a,b"&gt;</span><br><span class="line">  &lt;component :is="view"&gt;&lt;/component&gt;</span><br><span class="line">&lt;/keep-alive&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 正则表达式 (使用 `v-bind`) --&gt;</span><br><span class="line">&lt;keep-alive :include="/a|b/"&gt;</span><br><span class="line">  &lt;component :is="view"&gt;&lt;/component&gt;</span><br><span class="line">&lt;/keep-alive&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 数组 (使用 `v-bind`) --&gt;</span><br><span class="line">&lt;keep-alive :include="['a', 'b']"&gt;</span><br><span class="line">  &lt;component :is="view"&gt;&lt;/component&gt;</span><br><span class="line">&lt;/keep-alive&gt;</span><br></pre></td></tr></tbody></table></figure><h2 id="生命周期"><a class="markdownIt-Anchor" href="#生命周期"></a> 生命周期</h2><ul><li>activated： 在 keep-alive 组件激活时调用 。</li><li>deactivated：在 keep-alive 组件停用时调用</li></ul><p>在使用过keep-alive后，再次进来之后页面不会进行数据请求。如果想要再次进入想要页面刷新就可以在activated钩子函数中调用数据请求。</p><p><strong>在服务端渲染ssr时，这些钩子函数也不会被调用。</strong></p><h2 id="基础使用"><a class="markdownIt-Anchor" href="#基础使用"></a> 基础使用</h2><p>1.使用keep-alive包着想要缓存组件，（包含router-view是为了缓存所有页面）。</p><p>App.vue文件中：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id="app"&gt;</span><br><span class="line">  &lt;keep-alive&gt;</span><br><span class="line">      &lt;router-view/&gt;</span><br><span class="line">    &lt;/keep-alive&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default {</span><br><span class="line">  name: 'App'</span><br><span class="line">}</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>2.局部缓存，结合keep-alive的属性include和exclude，结合router配置。</p><p>App.vue文件中：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div id="app"&gt;</span><br><span class="line">  &lt;keep-alive&gt;</span><br><span class="line">      &lt;router-view v-if="$route.meta.keepAlive"&gt;&lt;/router-view&gt;</span><br><span class="line">    &lt;/keep-alive&gt;</span><br><span class="line">    &lt;router-view v-if="!$route.meta.keepAlive"&gt;&lt;/router-view&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default {</span><br><span class="line">  name: 'App'</span><br><span class="line">}</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></tbody></table></figure><p>router配置文件</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router({</span><br><span class="line">  mode: <span class="string">'history'</span>,</span><br><span class="line">  routes: [</span><br><span class="line">    {</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      name: <span class="string">'home'</span>,</span><br><span class="line">      component: Home,</span><br><span class="line">      redirect: <span class="string">'index'</span>,</span><br><span class="line">      children: [</span><br><span class="line">        {</span><br><span class="line">          path: <span class="string">'index'</span>,</span><br><span class="line">          name: <span class="string">'index'</span>,</span><br><span class="line">          component: Index,</span><br><span class="line">          meta: {</span><br><span class="line">        keepAlive: <span class="literal">false</span> <span class="comment">// 不需要缓存</span></span><br><span class="line">        }</span><br><span class="line">        },</span><br><span class="line">        {</span><br><span class="line">          path: <span class="string">'user'</span>,</span><br><span class="line">          name: <span class="string">'user'</span>,</span><br><span class="line">          component: User,</span><br><span class="line">          meta: {</span><br><span class="line">        keepAlive: <span class="literal">true</span>  <span class="comment">// 需要缓存</span></span><br><span class="line">        }</span><br><span class="line">        },</span><br><span class="line">       ]</span><br><span class="line">    }</span><br><span class="line">  ]</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure><p><span style="color:red;font-weight:700;">include结合vuex使用：</span></p><p>我们可以借用vuex，动态捕获路由中<code>meta.keepAlive = true</code>配置的组件页面，切记<strong>组件name命名要和路由name设置保持一致，因为include里面匹配的是组件name</strong>。</p><p><strong>使用include/exclude 属性需要给所有vue类的name赋值（注意不是给route的name赋值），否则 include/exclude不生效</strong></p><p>正确写法是：</p><figure class="highlight js"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> {</span><br><span class="line"> name:<span class="string">'a'</span>, <span class="comment">// include 或 exclude所使用的name</span></span><br><span class="line"> data () {</span><br><span class="line"> <span class="keyword">return</span>{</span><br><span class="line">    }</span><br><span class="line">  },</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>路由：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 保持 name为a和b的组件</span><br><span class="line">&lt;keep-alive include="a,b"&gt;</span><br><span class="line">    &lt;router-view/&gt;</span><br><span class="line">&lt;/keep-alive&gt;</span><br></pre></td></tr></tbody></table></figure><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;keep-alive&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#keep-alive&quot;&gt;&lt;/a&gt; keep-alive&lt;/h2&gt;
&lt;p&gt;&lt;img src=&quot;//onlyLucky.github.io/2021/04/18/vue中使
      
    
    </summary>
    
    
      <category term="Vue" scheme="https://onlyLucky.github.io/categories/Vue/"/>
    
    
      <category term="vue" scheme="https://onlyLucky.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Markdown格式语法(进阶篇)</title>
    <link href="https://onlyLucky.github.io/2019/09/25/Markdown%E6%A0%BC%E5%BC%8F%E8%AF%AD%E6%B3%95-%E8%BF%9B%E9%98%B6%E7%AF%87-/"/>
    <id>https://onlyLucky.github.io/2019/09/25/Markdown格式语法-进阶篇-/</id>
    <published>2019-09-25T04:00:09.000Z</published>
    <updated>2019-10-28T08:49:33.113Z</updated>
    
    <content type="html"><![CDATA[<h1 id="markdown格式语法进阶篇"><a class="markdownIt-Anchor" href="#markdown格式语法进阶篇"></a> Markdown格式语法(进阶篇)</h1><h2 id="1yaml题头"><a class="markdownIt-Anchor" href="#1yaml题头"></a> 1.YAML题头</h2><p><strong>YAML</strong>（/ˈjæməl/，尾音类似<em>camel</em>骆驼）是一个可读性高，用来表达数据序列化的格式。(from baidu)</p><p>在这里呢，我只接触hexo博客书写的题头，具体的语法自行百度</p><a id="more"></a><p>eg:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">---       </span><br><span class="line"><span class="code">        title: CSS权重计算</span></span><br><span class="line"><span class="code">        date: 2019-09-19</span></span><br><span class="line"><span class="code">        tags:</span></span><br><span class="line"><span class="code">            css</span></span><br><span class="line"><span class="code">        categories: Web前端</span></span><br><span class="line">---</span><br></pre></td></tr></tbody></table></figure><p><span style="color: #dc3545;">补充：</span> YAML在hexo博客是一个扩展语法，用来表示文本信息让博客来识别，但是这里与markdown语法没有太大联系，适当了解即可</p><p><span style="color: #dc3545;">注意：</span> 一定要写在文章头部，英文冒号之后加一个空格</p><hr><h2 id="2注脚"><a class="markdownIt-Anchor" href="#2注脚"></a> 2.注脚</h2><p>显而易见，就像小学课本上的文言文注解一样</p><p>eg:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[<span class="symbol">^注脚标识符</span>][^注脚标识符]:注脚内容</span><br></pre></td></tr></tbody></table></figure><p>样式展示：</p><p>上邪<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup></p><p><span style="color: #dc3545;">注意：</span> 每个md编译器的展示效果都是不太一样的</p><hr><h2 id="3作品标记"><a class="markdownIt-Anchor" href="#3作品标记"></a> 3.作品标记</h2><p><strong>html</strong></p><p>eg:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">cite</span>&gt;</span>《诗经》<span class="tag">&lt;/<span class="name">cite</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>效果展示：<cite>《诗经》</cite></p><p><strong>markdown</strong></p><p>markdown中常使用 “” 《诗经》 “” ，这里好像没有显示(每个md编译器效果都不一样)不太常用</p><hr><h2 id="4缩写"><a class="markdownIt-Anchor" href="#4缩写"></a> 4.缩写</h2><p>常见在英文缩写，鼠标移动上去时会显示全写</p><p><strong>html</strong></p><p>eg:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">abbr</span> <span class="attr">title</span>=<span class="string">"HyperText Markup Language"</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>展示效果：<abbr title="HyperText Markup Language"><abbr title="HyperText Markup Language">HTML</abbr></abbr></p><p><strong>markdown</strong></p><p>eg:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*[HTML]:HyperText Markup LanguageHTML</span><br></pre></td></tr></tbody></table></figure><p>展示效果：  <abbr title="HyperText Markup Language">HTML</abbr></p><p>他就像是一个自定义变量，然后再引用</p><hr><h2 id="5自定义div"><a class="markdownIt-Anchor" href="#5自定义div"></a> 5.自定义div</h2><p>用不少于3个的:,冒号后面紧跟的是类名(不是所有的编译器都能够支持这种效果，不显示也很正常)</p><p>eg:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">:::normol</span><br><span class="line"></span><br><span class="line">hello world</span><br><span class="line"></span><br><span class="line"> :::</span><br></pre></td></tr></tbody></table></figure><p>效果展示：</p><p>:::normol</p><p>hello world</p><p>:::</p><hr><h2 id="6表格"><a class="markdownIt-Anchor" href="#6表格"></a> 6.表格</h2><p>html中的table，tr,th,td标签就不再多赘述了，重点是markdown的语法格式</p><p>eg:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">|th1|th2|th3|</span><br><span class="line">|:--|:--:|--:|</span><br><span class="line">|hello|hello|hello|</span><br></pre></td></tr></tbody></table></figure><p>效果展示：</p><table><thead><tr><th style="text-align:left">th1</th><th style="text-align:center">th2</th><th style="text-align:right">th3</th></tr></thead><tbody><tr><td style="text-align:left">hello</td><td style="text-align:center">hello</td><td style="text-align:right">hello</td></tr></tbody></table><p><span style="color: #dc3545;">注意：</span> 其中的冒号分别代表着左对齐、居中对齐、右对齐,中间至少要用一个减号分割(一些md编译器不支持表格布局);中间减号在一些编译器中有一些权重，减号越多列宽越大</p><hr><h2 id="7emoji表情"><a class="markdownIt-Anchor" href="#7emoji表情"></a> 7.emoji表情</h2><p>emoji是markdown中的扩展语法，是不包括emoji表情的</p><p>eg:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">:smile:</span><br></pre></td></tr></tbody></table></figure><p>效果展示：</p><p>😄</p><p>其他更多的emoji表情请自行百度markdown中emoji代码github😄😄</p><hr><h2 id="8todo-list"><a class="markdownIt-Anchor" href="#8todo-list"></a> 8.TODO list</h2><p>eg:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*TODAY</span><br><span class="line">-[ ] READING</span><br><span class="line">-[X] DO HOMEWORK</span><br><span class="line"><span class="bullet">- </span>WALKING</span><br></pre></td></tr></tbody></table></figure><p>效果展示：</p><ul><li>TODAY<ul><li>[ ] READING</li><li>[x] DO HOMEWORK</li><li>WALKING</li></ul></li></ul><p>有些编译器可以选中，一般都会在无序列表中实现</p><hr><h2 id="9latax学术排版mathjax"><a class="markdownIt-Anchor" href="#9latax学术排版mathjax"></a> 9.LaTax(学术排版)–MathJax</h2><p>支持LaTax算是markdown扩展中的恐怖之处了</p><p>eg:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line"><span class="code">\begin{equation}\int_0^\infty\frac{x^3}{e^x-1}\,dx=\frac{\pi^4}{15}\end{equation}</span></span><br><span class="line">$$</span><br></pre></td></tr></tbody></table></figure><p>效果展示：</p><p class="katex-block katex-error" title="ParseError: KaTeX parse error: No such environment: equation at position 7: \begin{̲e̲q̲u̲a̲t̲i̲o̲n̲}̲\int_0^\infty\…">\begin{equation}\int_0^\infty\frac{x^3}{e^x-1}\,dx=\frac{\pi^4}{15}\end{equation}</p><p>eg:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line"><span class="code">\sum_{i=0}N\int_{a}{b}g(t,i)\text{d}t</span></span><br><span class="line">$$</span><br></pre></td></tr></tbody></table></figure><p>效果展示：</p><p class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><munder><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>0</mn></mrow></munder><mi>N</mi><msub><mo>∫</mo><mi>a</mi></msub><mi>b</mi><mi>g</mi><mo stretchy="false">(</mo><mi>t</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mtext>d</mtext><mi>t</mi></mrow><annotation encoding="application/x-tex">\sum_{i=0}N\int_{a}{b}g(t,i)\text{d}t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.637669em;vertical-align:-1.277669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0500050000000003em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011249999999999316em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.6105579999999999em;"><span style="top:-1.7880500000000001em;margin-left:-0.44445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9119499999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault">b</span></span><span class="mord mathdefault" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathdefault">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault">i</span><span class="mclose">)</span><span class="mord text"><span class="mord">d</span></span><span class="mord mathdefault">t</span></span></span></span></span></p><hr><p>到这里就是我所了解的markdown语法的全部了，感兴趣的小伙伴，可以深入去了解一下。markdown的编译器有很多我就不在推荐了，大家可以下载体验一下，非常有趣。希望能够得到更多支持，谢谢😘😘😘</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>这里真的是一个注释啊！ <a href="#fnref1" class="footnote-backref">↩︎</a></p></li></ol></section><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;markdown格式语法进阶篇&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#markdown格式语法进阶篇&quot;&gt;&lt;/a&gt; Markdown格式语法(进阶篇)&lt;/h1&gt;
&lt;h2 id=&quot;1yaml题头&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1yaml题头&quot;&gt;&lt;/a&gt; 1.YAML题头&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;YAML&lt;/strong&gt;（/ˈjæməl/，尾音类似&lt;em&gt;camel&lt;/em&gt;骆驼）是一个可读性高，用来表达数据序列化的格式。(from baidu)&lt;/p&gt;
&lt;p&gt;在这里呢，我只接触hexo博客书写的题头，具体的语法自行百度&lt;/p&gt;
    
    </summary>
    
    
      <category term="markdown_study" scheme="https://onlyLucky.github.io/categories/markdown-study/"/>
    
    
      <category term="markdown" scheme="https://onlyLucky.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>Markdown格式语法(基础篇)</title>
    <link href="https://onlyLucky.github.io/2019/09/25/Markdown%E6%A0%BC%E5%BC%8F%E8%AF%AD%E6%B3%95-%E5%9F%BA%E7%A1%80%E7%AF%87-/"/>
    <id>https://onlyLucky.github.io/2019/09/25/Markdown格式语法-基础篇-/</id>
    <published>2019-09-25T03:30:29.000Z</published>
    <updated>2020-03-18T08:08:59.569Z</updated>
    
    <content type="html"><![CDATA[<h1 id="markdown格式语法基础篇"><a class="markdownIt-Anchor" href="#markdown格式语法基础篇"></a> Markdown格式语法(基础篇)</h1><h3 id="1斜体-粗体"><a class="markdownIt-Anchor" href="#1斜体-粗体"></a> 1.斜体、粗体</h3><h4 id="html"><a class="markdownIt-Anchor" href="#html"></a> html</h4><p>1.斜体:可以用<em></em>标签来表示</p><p>eg:<em>斜体</em></p><p>2.粗体:可以用<strong></strong>标签来表示</p><p>eg:<strong>粗体</strong></p><a id="more"></a><h4 id="markdown"><a class="markdownIt-Anchor" href="#markdown"></a> Markdown</h4><p>1.斜体:可以用*或_引用</p><p>eg:<em>斜体</em><em>斜体</em></p><p>2.粗体:可以用**或__引用</p><p>eg:<strong>粗体</strong>  <strong>粗体</strong></p><hr><h3 id="2标题-h1~h6"><a class="markdownIt-Anchor" href="#2标题-h1~h6"></a> 2.标题 h1~h6</h3><h4 id="html-2"><a class="markdownIt-Anchor" href="#html-2"></a> html</h4><p>h1~h6标签来表示标题等级<br>eg:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>一级标题1<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h4 id="markdown-2"><a class="markdownIt-Anchor" href="#markdown-2"></a> Markdown</h4><p>等级标题用#来表示，#越多标题越小，最多好像只有六个，再多就无效了  eg:</p><p>eg:# 一级标签</p><p>注意：补充！标题+回车+‘====’(两个等号以上)=一级标题</p><p>​标题+回车+‘------’(两个减号以上)=二级标题</p><hr><h3 id="3超链接"><a class="markdownIt-Anchor" href="#3超链接"></a> 3.超链接</h3><h4 id="html-3"><a class="markdownIt-Anchor" href="#html-3"></a> html</h4><p>一对a标签，教你超链接！！hahaha~~</p><p>eg:<a href="https://www.bilibili.com/" title="B站" target="_blank" rel="noopener">bilibili</a></p><h4 id="markdown-3"><a class="markdownIt-Anchor" href="#markdown-3"></a> Markdown</h4><p>语法标识:[]内为文本,()为链接地址;另一种为&lt;&gt;直接加地址</p><p>eg:<a href="https://www.bilibili.com/" title="bilibili" target="_blank" rel="noopener">bilibili</a></p><p>eg:<a href="https://www.bilibili.com/" target="_blank" rel="noopener">https://www.bilibili.com/</a></p><hr><h3 id="4上标与下标"><a class="markdownIt-Anchor" href="#4上标与下标"></a> 4.上标与下标</h3><h4 id="html-4"><a class="markdownIt-Anchor" href="#html-4"></a> html</h4><p>上标标签是<sup></sup>,下标标签是<sub></sub>(向上指的有没有haha~~)</p><p>eg:这是一个<sup>上标</sup>这里还有一个<sub>下标</sub></p><h4 id="markdown-4"><a class="markdownIt-Anchor" href="#markdown-4"></a> Markdown</h4><p>上标呢是被^围起来的；下标没有向下的，那就用~浪起来吧！</p><p>eg:这是一个小 ^ 上标 ^      这是一个 ~ 下标 ~</p><hr><h3 id="5标记文本"><a class="markdownIt-Anchor" href="#5标记文本"></a> 5.标记文本</h3><h4 id="html-5"><a class="markdownIt-Anchor" href="#html-5"></a> html</h4><p>标记文本用mark标签使用的<br>eg:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mark</span>&gt;</span>标记文本<span class="tag">&lt;/<span class="name">mark</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>效果展示：<mark>标记文本</mark></p><h4 id="markdown-5"><a class="markdownIt-Anchor" href="#markdown-5"></a> Markdown</h4><p>eg:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">==标签内容==</span><br></pre></td></tr></tbody></table></figure><p>效果展示：<mark>标记文本</mark></p><hr><h3 id="6下划线"><a class="markdownIt-Anchor" href="#6下划线"></a> 6.下划线</h3><p>下划线使用u标签</p><p>eg:</p><p>​</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">u</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>​</p><p>效果展示：<u>下划线</u></p><p>注：有些markdown的编译器不支持一些表示</p><h3 id="7删除线"><a class="markdownIt-Anchor" href="#7删除线"></a> 7.删除线</h3><h4 id="html-6"><a class="markdownIt-Anchor" href="#html-6"></a> html</h4><p>删除线可以用del标签来表示</p><p>eg:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">del</span>&gt;</span>删除线<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>效果展示：<del>删除线</del></p><h4 id="markdown-6"><a class="markdownIt-Anchor" href="#markdown-6"></a> Markdown</h4><p>用两个~围起来表示删除线</p><p>eg:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">~~删除线~~</span><br></pre></td></tr></tbody></table></figure><p>效果展示：<s>删除线</s></p><hr><h3 id="8有无序列表"><a class="markdownIt-Anchor" href="#8有无序列表"></a> 8.有无序列表</h3><h4 id="无序列表"><a class="markdownIt-Anchor" href="#无序列表"></a> 无序列表</h4><p><strong>html</strong></p><p>eg:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>效果展示：</p><ul>    <li>列表项1</li>    <li>列表项2</li>    <li>列表项3</li></ul><p><strong>markdown</strong></p><p> 除了使用*之外，还可以使用-和+。但是一定要注意放在一行开头，而且符号(-,+,星号)要和列表内容空一格,除此之外，有无序列表都可以相互嵌套</p><p>eg:</p><p>​</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">* </span>列表项1</span><br></pre></td></tr></tbody></table></figure><p>​</p><p>效果展示如下</p><ul><li>列表项1</li></ul><ul><li>列表项2<ul><li>列表项</li></ul></li></ul><h4 id="有序列表"><a class="markdownIt-Anchor" href="#有序列表"></a> 有序列表</h4><p><strong>html</strong></p><p>eg:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">type</span>=<span class="string">"I"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>item1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>item2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>item3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>效果展示：</p><ol type="I">    <li>item1</li>    <li>item2</li>    <li>item3</li></ol><p><strong>markdown</strong></p><p>直接写1.或者A.等，如果想追求较好的效果可以用html来编写</p><hr><h3 id="9文字引用"><a class="markdownIt-Anchor" href="#9文字引用"></a> 9.文字引用</h3><p>用来引用名人的格言警句</p><p><strong>html</strong></p><p>eg:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span>名言<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>效果展示：</p><blockquote><p style="text-align: center;  color: #dc3545; font-size: 20px">上邪</p>     <p style="text-align: center">【作者】佚名 【朝代】汉</p>    上邪，我欲与君相知，长命无绝衰。山无陵，江水为竭。冬雷震震，夏雨雪。天地合，乃敢与君绝。</blockquote><p><strong>markdown</strong></p><p>这里使用就会很简单了，直接用&gt;就可以了，而且文字引用还可以嵌套，but样式在这里真的很难搞</p><p>eg:</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;名言</span><br><span class="line">&gt;&gt;名言</span><br></pre></td></tr></tbody></table></figure><p>效果展示:</p><blockquote><p>山无陵，江水为竭。冬雷震震，夏雨雪。</p><blockquote><blockquote><p>天地合，乃敢与君绝。</p></blockquote></blockquote></blockquote><hr><h3 id="10行内代码代码块"><a class="markdownIt-Anchor" href="#10行内代码代码块"></a> 10.行内代码,代码块</h3><p>为了在保留鲜活的代码，hahaha~~~</p><p><strong>html</strong></p><p>行内代码用code标签引用，代码块可以用pre标签引用</p><p>eg:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">code</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">code</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>效果展示：<code>HTML</code></p><p><span style="color: #dc3545;">补充：</span>还有一种可以用\将代码转义</p><p>eg:</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">\<span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    \<span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    \<span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    \<span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        \<span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            hello world</span><br><span class="line">        \<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    \<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">\<span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p>效果展示：</p><p>&lt;html&gt;<br>&lt;head&gt;<br>&lt;/head&gt;<br>&lt;body&gt;<br>&lt;p&gt;<br>hello world<br>&lt;/p&gt;<br>&lt;/body&gt;<br>&lt;/html&gt;</p><p><strong>markdown</strong></p><p>这里代码块只需要三个上斜引号符号引用就就不会被渲染了,而且还可以分辨是那种编程语言呦</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            hello world</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h3 id="11图片视频"><a class="markdownIt-Anchor" href="#11图片视频"></a> 11.图片，视频</h3><p>其实图片的引用就和超链接相差了一个!，其中的"!"标识着这是一个多媒体文件</p><p>用法：</p><figure class="highlight markdown"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![<span class="string">图片命名</span>](<span class="link">地址 "鼠标悬浮提示"</span>)</span><br></pre></td></tr></tbody></table></figure><p>在这里，除了链接到本地图片文件，还可以链接到网络图片</p><p>视频的话，和图片引用没太差了。只是文件类型一样(hahaha~~~~)</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;markdown格式语法基础篇&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#markdown格式语法基础篇&quot;&gt;&lt;/a&gt; Markdown格式语法(基础篇)&lt;/h1&gt;
&lt;h3 id=&quot;1斜体-粗体&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1斜体-粗体&quot;&gt;&lt;/a&gt; 1.斜体、粗体&lt;/h3&gt;
&lt;h4 id=&quot;html&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#html&quot;&gt;&lt;/a&gt; html&lt;/h4&gt;
&lt;p&gt;1.斜体:可以用&lt;em&gt;&lt;/em&gt;标签来表示&lt;/p&gt;
&lt;p&gt;eg:&lt;em&gt;斜体&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;2.粗体:可以用&lt;strong&gt;&lt;/strong&gt;标签来表示&lt;/p&gt;
&lt;p&gt;eg:&lt;strong&gt;粗体&lt;/strong&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="markdown_study" scheme="https://onlyLucky.github.io/categories/markdown-study/"/>
    
    
      <category term="markdown" scheme="https://onlyLucky.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>CSS权重计算</title>
    <link href="https://onlyLucky.github.io/2019/09/19/CSS%E6%9D%83%E9%87%8D%E8%AE%A1%E7%AE%97/"/>
    <id>https://onlyLucky.github.io/2019/09/19/CSS权重计算/</id>
    <published>2019-09-18T16:00:00.000Z</published>
    <updated>2019-09-25T09:08:12.467Z</updated>
    
    <content type="html"><![CDATA[<h1 id="css权重计算"><a class="markdownIt-Anchor" href="#css权重计算"></a> CSS权重计算</h1><p>  一般情况，对于刚接触css3的小白来说，CSS样式权重的计算原理依旧是一头雾水。</p><p>  CSS样式的权重排序是：!important&gt;行间样式&gt;id&gt;class|属性&gt;标签选择器&gt;通配符*(注:&gt;表示高低，|表示同级)，但是CSS样式权重并不像我们想象的由高到低排序一样那么简单，其中的权重等级是可以简单计算的，没错，你没有听错！像四则运算一样</p><p>下面的表格为CSS‘权重值’(0,1,10,100,1000并不为准确数值)</p><a id="more"></a><table><thead><tr><th style="text-align:left">CSS样式</th><th>权重数值</th></tr></thead><tbody><tr><td style="text-align:left">!important</td><td>infinity</td></tr><tr><td style="text-align:left">行间样式</td><td>1000</td></tr><tr><td style="text-align:left">id</td><td>100</td></tr><tr><td style="text-align:left">class|属性|伪类</td><td>10</td></tr><tr><td style="text-align:left">标签|伪元素</td><td>1</td></tr><tr><td style="text-align:left">通配符*</td><td>0</td></tr></tbody></table><p>  根据资料查证：例如id，100并不是指id的一个权重值就是100，实际上这个100是一个进制数，不是2进制，也不是10进制；而是256进制，就是0到255后+1才是1，列如通配符的权重值0到标签、伪元素的权重值1，中时间实际上差了255。依次类推。</p><p>  !important的权重值虽然是正无穷，但其实也是可也计算的，比如正无穷+1或者*1，就是要比正无穷大，其原理是不管那种语言，在计算机中正无穷的值，都是一个有界的。不是数学上无界的一个慨念。</p><p>下面以代码方式演示权重计算的方式：</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#home</span>{</span><br><span class="line">    <span class="comment">/*权重计算方式为1*100=100*/</span></span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100vh</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">  }</span><br><span class="line">  <span class="selector-id">#home</span> <span class="selector-class">.home-nav</span>{</span><br><span class="line">    <span class="comment">/*权重计算方式为1*100+1*10=110*/</span></span><br><span class="line">    <span class="comment">/*css变量的使用*/</span></span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">var</span>(--color-tint);</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#ffffff</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">10</span>;</span><br><span class="line">  }</span><br></pre></td></tr></tbody></table></figure><p>  有时候我们或许遇到权重等级不够，样式被覆盖，不显示。或许多加一个id选择器，就会简单解决；我们还可以灵活利用浏览器提供的开发者工具，检测元素标签的属性，盒子大小…</p><p>  最后，第一次做博客小白，有什么缺漏的还请各位已经深入WEB的老司机多多指教批评</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;css权重计算&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#css权重计算&quot;&gt;&lt;/a&gt; CSS权重计算&lt;/h1&gt;
&lt;p&gt;  一般情况，对于刚接触css3的小白来说，CSS样式权重的计算原理依旧是一头雾水。&lt;/p&gt;
&lt;p&gt;  CSS样式的权重排序是：!important&amp;gt;行间样式&amp;gt;id&amp;gt;class|属性&amp;gt;标签选择器&amp;gt;通配符*(注:&amp;gt;表示高低，|表示同级)，但是CSS样式权重并不像我们想象的由高到低排序一样那么简单，其中的权重等级是可以简单计算的，没错，你没有听错！像四则运算一样&lt;/p&gt;
&lt;p&gt;下面的表格为CSS‘权重值’(0,1,10,100,1000并不为准确数值)&lt;/p&gt;
    
    </summary>
    
    
      <category term="Web前端" scheme="https://onlyLucky.github.io/categories/Web%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="css" scheme="https://onlyLucky.github.io/tags/css/"/>
    
  </entry>
  
</feed>
